{"filter":false,"title":"rack_deflater_spec.rb","tooltip":"/spec/API/rack_deflater_spec.rb","undoManager":{"mark":1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":18},"action":"insert","lines":["RACK_DEFLATER_SPEC"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":18},"action":"remove","lines":["RACK_DEFLATER_SPEC"]},{"start":{"row":0,"column":0},"end":{"row":19,"column":3},"action":"insert","lines":["require 'spec_helper'","","describe Rack::Deflater do","  it \"produces an identical eTag whether content is deflated or not\" do","    get \"/api/acme\"","    response.headers[\"Content-Encoding\"].should be_nil","    etag = response.headers[\"Etag\"]","    content_length = response.headers[\"Content-Length\"].to_i","    get \"/api/acme\", {}, { \"HTTP_ACCEPT_ENCODING\" => \"gzip\" }","    response.headers[\"Etag\"].should == etag","    response.headers[\"Content-Length\"].to_i.should_not == content_length","    response.headers[\"Content-Encoding\"].should == \"gzip\"","  end","  it \"deflates JSONP content\" do","    get \"/api/acme?callback=parseResponse\", {}, { \"HTTP_ACCEPT_ENCODING\" => \"deflate\" }","    response.headers[\"Content-Encoding\"].should == \"deflate\"","    inflated_response_body = Zlib::Inflate.new(-Zlib::MAX_WBITS).inflate(response.body.to_s)","    inflated_response_body.should == \"parseResponse(...)\"","  end","end"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":3},"end":{"row":19,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1426832492002,"hash":"05b76b3fd322bb8ba1713c65bfd42a7c4e1e14ba"}